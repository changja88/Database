


03 - 고급기능

- 소개
    - 데이터 손실 또는 출돌을 방지하는 SQL의 고급 기능
    - 몇 가지 PostgreSQL확장을 살펴 본다


- 뷰
    CREATE VIEW myview AS
    SELECT city, temp_lo, temp_hi, prcp, date, location
    FROM weather,
         cities
    WHERE city = name;
    - 뷰를 자유롭게 사용할 수 있게 하는 것은 우수한 SQL데이터베이스 설계의 핵심이다
    - 뷰를 사용하면 일관된 인터페이스 하에서 테이블 구조의 세부 사항을 캐슐화함으로써 애플리케이션의 발전에 따라 변경이 가능하다
    - 뷰는 실제 테이블 사용할 수 있는 곳이면 어드든 대부분 사용 가능하며 다른 뷰의 뷰를 구축하는 것은 드문 일이 아니다


- 트랜잭션
    BEGIN;
    UPDATE accounts SET balance = balance = 100.00
    WHERE name = 'Alice'
    COMMIT;
    - 트랜잭션은 앞뒤에 BEGIN 및 COMMIT 명령을 사용한 SQL명령으로 설정된다
    - 트랜잭션 도중에 커밋을 하지 않기로 결정한 경우 (Alice잔금이 없는경우) COMMIT 대신에 ROLLBACK 명령을 수행한다
    - PostgreSQL은 모든 SQL문이 트랜잭션 내에서 실행되는 것으로 취급한다

    BEGIN;
    UPDATE accounts SET balance = 100
    WHERE name = 'Alice'; SAVEPOINT my_savepoint;
    UPdate accounts SET balance = 100
    WHERE name = 'Bob'
    ROLLBACK TO my_savepoint;
    UPDATE  accounts SET balance = 100
    WHERE name = 'Wally'
    COMMIT;
    - SVEPOINT를 사용해 저장 지점을 정의한 후 ROLLBACK TO를 사용해 필요 시 저장 지점까지 롤백할 수 있따
    - 저장 지점 및 롤백 정의 사이의 트랜잭션의 모든 데이터베이스 변경 내용이 폐기되지만 저장 지점 이전의 변경 내용은 유지된다


- Window 함수
    - 현재 행과 관련된 테이블 행 집합을 가로질러 계산을 수행한다
    - 일반 집계 함수와 달리 window함수를 사용해서 행을 단일 출력 행으로 그룹화지 않으며, 행이 각자의 정체성을 유지한다
      내부적으로 window함수는 쿼리 결과의 현재 행 이상을 액세스할 수 있다

    SELECT depname, empno, salart, avg(salary) OVER (PARTITION BY depname) FROM empsally;
    - avg 집계 함수와 동일한 함수지만, OVER 절 때문에 window함수로 취급되며, 적절한 행 집합 간에 계산이 된다
    - window 함수 호출은 항상 OVER 절에 곧바로 이어서 window 함수의 이름과 인수가 따라온다

    SELECT depname, empno, salary, rank()
    OVER(PARTITION BY depname ORDER BY salary DESC) FROM empsalary;
    - OVER 내부의 ORDER BY를 사용하면 window함수에서 행이 처리되는 순서를 제어할수 있다

    SELECT salary sum(salary) OVER() FROM empsalary;
    - 행 순서 지정이 중요하지 않은 경우에는, ORDER BY, PARTITION BY를 생략 할수 있다

    - ORDER BY, PARTITION BY 차이
        - ORDER BY 는 아래 행과 결과가 이어지지만 PARTITION BY 는 아래 행과 독립적이다


- 상속
    CREATE TABLE cities(
        name    text,
        population  real,
        altitude    int
    );

    CREATE TABLE capitals(
        state   char(2)
    ) INHERITS (cities);

    - 이 경우 captals의 모든 행은 부모인 cities로부터 모든 컬럼 및 속성을 상속 받는다

    SELECT name, alititude
    FROM CITIES
    WHERE alititude > 500;
    - cities, capitals 전부를 뒤져서 나온다

    SELECT name, alititude
    FROM CITIES
    WHERE alititude > 500;
    - cities만 뒤져서 나온다



