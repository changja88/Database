

01 - 트랜잭션

- 트랜잭션
    - 하나의 작업을 수행하는 데 필요한 데이터베이스의 연산들을 모아놓은 것으로, 데이터베이스에서 논맂적인 작업의 단위가 된다
    - 데이터베이스에 장애가 발생했을 때 데이터를 복구하는 작업의 단위도 된다

- 트랜잭션의 특징
    - 원자성 (회복가능)
        - 트랜잭션을 구성하는 연산들이 모두 정상적으로 실행되거나 하나도 실행되지 않아야 한다는 all-or-nothing방식
        - 트랜잭션을 수행하다가 장애가 발생하여 작업을 완료하지 못했다면, 지금까지 실행한 연산 처리를 모두 취소하고
          작업 전의 상태로 되돌려 트랜잭션의 원자성을 보장해야한다
    - 일관성 (병행 제어 가능)
        - 트랜잭션이 성공적으로 수행된 후에도 데이터베이스가 일관된 상태를 유지해야 함을 의미한다
    - 격리성 (병행 제어 가능)
        - 현재 수행중인 트랜잭션이 완료될 때가지 트래잭션이 생성한 중간 연산 결과에 다른 트랜잭션들이 접근할 수 없음을 의미
    - 지속성 (회복 가능)
        - 트랜잭션이 성공적을 완료된 후 데이터베이스에 반영한 수행 결과는 어떠한 경우에도 손실되지 않고 역구적이야 함을 의미

- 트랙잭션의 연산
    - commit연산 : 트랜잭션이 성송적으로 수행되었음을 선언
    - rollback연산 : 트랜잭션을 수행하는 데 실패했음을 선언

- 트랜잭션의 상태
    - 활동 -> 부분 완료 -> 완료(commit)
          -> 실패     -> 철회(rollback)

    - 부분 완료 상태
        - 트랜잭션의 마지막 연산이 실행된 직후의 상태를 부분 완료 상태라 한다
          처리가 끝났지만 트랜잭션이 수행된 최종 결과를 데이터베이스에 아직 반영하지 않은 상태다
          부분완료 상태의 트랜잭션은 상황에 따라 완료 상태나 실패 상태가 될수 있다
    - 완료 상태
        -트랜잭션이 성공적으로 완료되어 commit연산을 실행한 상태로 완료 상태라고 한다
    - 실패 상태
        - 여러 이유로 인해 장애가 발생하여 트랜잭션의 수행이 중단된 상태
    - 철회 상태
        - 트랜잭션을 수행하는데 실패하여 rollback연산을 실행한 상태이다
        - 철회 상태가 되면 지금까지 실행한 트랜잭션의 연산을 모두 취소하고 트랜잭션이 수행되기 전의 상태로 되돌리고 종료된다
        - 내부 문제가 아니라 하드위어의 이상이나 소프트웨어의 오류로 트랜잭션이 수행이 중단되고 철회 상태가 된경우에는
          철회된 트랜잭션을 다시 시작한다
          하지만 트랜잭션이 처리하려는 데이터가 데이터베이스에 존재하지 않거나 트랜잭션의 논리적 오류인 경우 폐기한다


