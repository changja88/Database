

03 - SQL을 이용한 데이터 조작



SQL을 이용한 데이터 조작
- 데이터 검색 -> SELECT
- 데이터 삽입 -> INSERT
- 데이터 수정 -> UPDATE
- 데이터 삭제 -> DELETE

데이터 검색
- 기본 검색
    - SELECT [ALL | DISTINCT] 속성_리스트 FROM 테이블_리스트
    - 검색하고 싶은 속성의 이름은 콤마로 구분한다
    - 모든 속성을 검색하기 위해 속성의 이름을 전부 나열하지 않고 * 를 사용할수도 있다
    - 테이블에서 튜플의 중복을 제거하고 한 번씩만 출력되도록 하려면 DISTINCT 키워드를 사용한다
        - SELECT DISTINCT 제조업체 FROM TABLE
    - 결과 테이블에 출력되는 속성의 이름을 다른 이름으로 바꾸어 출력할 수도 있다
        - SELECT 제품명, 단가 AS 가격 FROM 제품
    - 산술식을 이용한 검색
        - SELECT 제품명, 단가 + 500 AS "조정 단가" FROM 제품
    - 조건 검색
        - SELECT [ALL | DISTINCT] FROM 테이블_리스트 [WHERE 조건];
    - LIKE를 이용한 검색
        - 검색 조건을 부분적으로만 알고 있다면 LIKE 키워드를 이용해 검색할 수 있다
        - % : 0개 이상의 문자 (문자의 내용과 개수는 상관 없음)
        - _ : 1개의 문자(문자의 내용은 상관 없음)
    - 정렬 검색
        - 일반적으로 SELECT문의 검색 결과 테이블은 DMS가 정한 순서로 출력된다
        - SELECT [ALL | DISTINCT] 속성_리스트 FROM 테이블_리스트 [WHERE] 조건 [ORDER BY 속성_리스트 [ASC|DESC];
    - 집계 함수를 이용한 검색
        - 모든 데이터 -> COUNT, MAX, MIN
        - 숫자 데이터 -> SUM. AVG
        - 집계 함수는 널인 속성 값은 제외하고 계산한다
        - 집계 함수는 WHERE절에서는 사용할 수 없고 SELECT 절이나 HAVING 절에서만 사용할 수 있다
        - SELECT AVG(단가) FROM 제품
        - 결과 테이블을 보면 속성의 이름이 별도로 지정되어 있지않다(집계 함수의 결과가 테이블에 원래 있던 내용이 아니기때문)
          따라서, 집계 함수를 이용해 계산된 결과 값을 출력할 떄는 AS키워드를 사용해 새 이름을 부여해주는 것이 좋다
        - DISTINCT 키워드를 사용해 특정 속성 값의 중복을 없애고 집계 함수를 적용할 수 있다
            - SELECT COUNT(DISTINCT 제조업체) AS "제조업체 수" FROM 제품

